Diagramas de punta a punta:
 ¿ Cuantos ? 
 ¿ Cuáles ?
 ¿ Hace falta mostrar todo el modelo?
 ¿ Todo en un diagrama?
 ¿ Hace falta duplicar todas las etapas de 
  una acción en un cliente para distintos 
  escenarios? ¿ Cuales ?

Threads:
    cliente: uno o dos o un pool?
    servidor: uno solo!

Del tp en general:
-condiciones minimas de aprobación
  tenemos:
    -varios DS de punta a punta
    -DC del cliente
    -grafos de nuestro protocolo
    -que cambio del diseño

¿ Realmente tienen que comunicarse cada terminal virtual con su controlador ?
¿ Realmente tienen que actuar en paralelo / concurrentemente el pooleo de nuevos pedidos en el servidor ?
¿ Está bueno hardcoderar el despachador de pedidos ?
¿ Está bueno tener muchas claese ? 
¿ Está bueno hardcodear la actualización del Event-Hadler ?

Dentro del cliente.
En el controlador, tenemos clases con 2 responsabilidades, enviar y recibir mensajes de y a la  capa presentación
o una que es controlar?

¿ Hace falta mostrar los "obtener instancia" de los singletones de los DS ?

¿ Cuando me entero si el cliente es VIP en la terminal del cliente ? ¿ Como actualizamos el saldo del lado del cliente ? ¿ Esperamos la respuesta del casino guardando el estado previo para poder restar ? ¿ Hay que guardar el estado ?

¿ Que tan generico o que tan instanciado deben estar los DS ? ¿ Con cual se tiene una mayor visualizacion de las cosas (metodos relaciones) ? Conveniencia

¿ Que pasa con los observadores en una mesa de Craps ? Segun el protocolo (el texto) un usuario no podria ingresar a una mesa si no esta en modo jugador O_o

¿ Como se entera el cliente de los valores de ficha valido ? No es para validar sino para poder dibujar.

